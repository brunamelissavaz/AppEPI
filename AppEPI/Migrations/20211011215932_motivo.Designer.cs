// <auto-generated />
using System;
using AppEPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppEPI.Migrations
{
    [DbContext(typeof(EPIContext))]
    [Migration("20211011215932_motivo")]
    partial class motivo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppEPI.Entidades.Categoria", b =>
                {
                    b.Property<int?>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("AppEPI.Entidades.Motivo", b =>
                {
                    b.Property<int?>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SolicitacaoProdutoCodigoProduto")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitacaoProdutoCodigoSolicitacao")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("SolicitacaoProdutoCodigoProduto", "SolicitacaoProdutoCodigoSolicitacao");

                    b.ToTable("Motivo");
                });

            modelBuilder.Entity("AppEPI.Entidades.Produto", b =>
                {
                    b.Property<int?>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoCategoria");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("AppEPI.Entidades.Solicitacao", b =>
                {
                    b.Property<int?>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoUF")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotivoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostoDeTrabalho")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("MotivoCodigo");

                    b.ToTable("Solicitacao");
                });

            modelBuilder.Entity("AppEPI.Entidades.SolicitacaoProduto", b =>
                {
                    b.Property<int>("CodigoProduto")
                        .HasColumnType("int");

                    b.Property<int>("CodigoSolicitacao")
                        .HasColumnType("int");

                    b.Property<int>("CodigoMotivo")
                        .HasColumnType("int");

                    b.Property<string>("Tamanho")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoProduto", "CodigoSolicitacao");

                    b.HasIndex("CodigoSolicitacao");

                    b.ToTable("SolicitacaoProduto");
                });

            modelBuilder.Entity("AppEPI.Entidades.UF", b =>
                {
                    b.Property<int?>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("UF");
                });

            modelBuilder.Entity("SolicitacaoUF", b =>
                {
                    b.Property<int>("SolicitacoesCodigo")
                        .HasColumnType("int");

                    b.Property<int>("UFsCodigo")
                        .HasColumnType("int");

                    b.HasKey("SolicitacoesCodigo", "UFsCodigo");

                    b.HasIndex("UFsCodigo");

                    b.ToTable("SolicitacaoUF");
                });

            modelBuilder.Entity("AppEPI.Entidades.Motivo", b =>
                {
                    b.HasOne("AppEPI.Entidades.SolicitacaoProduto", null)
                        .WithMany("Motivos")
                        .HasForeignKey("SolicitacaoProdutoCodigoProduto", "SolicitacaoProdutoCodigoSolicitacao");
                });

            modelBuilder.Entity("AppEPI.Entidades.Produto", b =>
                {
                    b.HasOne("AppEPI.Entidades.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CodigoCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("AppEPI.Entidades.Solicitacao", b =>
                {
                    b.HasOne("AppEPI.Entidades.Motivo", null)
                        .WithMany("Solicitacoes")
                        .HasForeignKey("MotivoCodigo");
                });

            modelBuilder.Entity("AppEPI.Entidades.SolicitacaoProduto", b =>
                {
                    b.HasOne("AppEPI.Entidades.Produto", "Produto")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("CodigoProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppEPI.Entidades.Solicitacao", "Solicitacao")
                        .WithMany("Produtos")
                        .HasForeignKey("CodigoSolicitacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("SolicitacaoUF", b =>
                {
                    b.HasOne("AppEPI.Entidades.Solicitacao", null)
                        .WithMany()
                        .HasForeignKey("SolicitacoesCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppEPI.Entidades.UF", null)
                        .WithMany()
                        .HasForeignKey("UFsCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppEPI.Entidades.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("AppEPI.Entidades.Motivo", b =>
                {
                    b.Navigation("Solicitacoes");
                });

            modelBuilder.Entity("AppEPI.Entidades.Produto", b =>
                {
                    b.Navigation("Solicitacoes");
                });

            modelBuilder.Entity("AppEPI.Entidades.Solicitacao", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("AppEPI.Entidades.SolicitacaoProduto", b =>
                {
                    b.Navigation("Motivos");
                });
#pragma warning restore 612, 618
        }
    }
}
